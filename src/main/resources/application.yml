spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST_PORT}/card_manager
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: Tkm Card Manager ${INSTANCE_NUMBER:0}
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_SERVERS}
      group-id: ${KAFKA_GROUP_ID}
      client-id: ${KAFKA_GROUP_ID}${INSTANCE_NUMBER:0}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
    producer:
      bootstrap-servers: ${KAFKA_SERVERS}
      client-id: ${KAFKA_GROUP_ID}${INSTANCE_NUMBER:0}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /tkm-ms-card-manager

logging:
  level:
    root: ${LOGGING_LEVEL:INFO}
  pattern:
    level: "${LOGGING_PATTERN:%p [${spring.application.name}][%X{traceId}]}"

azure:
  keyvault:
    enabled: true
    client-id: ${AZURE_KEYVAULT_CLIENT_ID}
    client-key: ${AZURE_KEYVAULT_CLIENT_KEY}
    tenant-id: ${AZURE_KEYVAULT_TENANT_ID}
    uri: ${AZURE_KEYVAULT_URI}

keyvault:
  readQueuePrvPgpKey: ${${profile:prod}-readQueuePrvPgpKey}
  readQueuePubPgpKey: ${${profile:prod}-readQueuePubPgpKey}