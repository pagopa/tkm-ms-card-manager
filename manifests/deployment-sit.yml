apiVersion: apps/v1
kind: Deployment
metadata:
  name: tkmmscardmanagersit
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tkmmscardmanagersit
  template:
    metadata:
      labels:
        app: tkmmscardmanagersit
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: '8080'
        prometheus.io/scrape: 'true'
    spec:
      hostAliases:
        - ip: "10.70.67.9"
          hostnames:
            - "tkmpgsqlt01.postgres.database.azure.com"
        - ip: "10.70.67.8"
          hostnames:
            - "ddstkmhub.servicebus.windows.net"
        - ip: "10.230.11.68"
          hostnames:
            - "cstar-d-evh-ns.servicebus.windows.net"
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: tkm-card-manager-spc
            nodePublishSecretRef:
              name: tkm-card-manager-kv-store-creds
      containers:
        - name: tkmmscardmanagersit
          image: cstaruatregistry.azurecr.io/tkmmscardmanager
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: keyvault-connection-informations
            - configMapRef:
                name: kafka-log-configuration
            - configMapRef:
                name: tkmmscardmanager
            - configMapRef:
                name: jvm
          resources:
            requests:
              memory: 4Gi
              cpu: 500m
            limits:
              memory: 8Gi
              cpu: 1000m
          volumeMounts:
            - name: secrets-store-inline
              mountPath: /mnt/secrets-store
              readOnly: true
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
          env:
            - name: NOME_ENV_VAR
              valueFrom:
                secretKeyRef:
                  key: NOME_ENV_VAR
                  name: name-secret-name
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          imagePullPolicy: Always